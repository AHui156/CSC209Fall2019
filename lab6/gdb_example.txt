Script started on 2019-10-18 17:00:26-0400
]0;foojoel@wolf:/h/u6/c9/01/foojoel/foojoel/lab6wolf:~/foojoel/lab6$ gdb overflow 
GNU gdb (Ubuntu 8.1-0ubuntu3.1) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from overflow...done.
(gdb) b main
Breakpoint 1 at 0x742: file overflow.c, line 6.
(gdb) b [K[Klist 40
35      
36          for (i = 0; i < OVERFLOW; i++) {
37              a[i] = i * 10;
38              printf("i = %d\n", i);
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
42          }
43      
44          return 0;
(gdb) b 37
Breakpoint 2 at 0x965: file overflow.c, line 37.
(gdb) run
Starting program: /h/u6/c9/01/foojoel/foojoel/lab6/overflow 

Breakpoint 1, main () at overflow.c:6
6       int main() {
(gdb) c
Continuing.
Address of the variables:
7fffffffe9b0 -> &after[0]
7fffffffe9b4 -> &after[1]
7fffffffe9b8 -> &after[2]
7fffffffe9bc -> &after[3]
7fffffffe9a0 -> &a[0]
7fffffffe9a4 -> &a[1]
7fffffffe9a8 -> &a[2]
7fffffffe9ac -> &a[3]
7fffffffe990 -> &before[0]
7fffffffe994 -> &before[1]
7fffffffe998 -> &before[2]
7fffffffe99c -> &before[3]
7fffffffe98c -> &i
7fffffffe988 -> &index

Initial values:
i = 0
before = {10, 10, 10, 10}
a = {0, 0, 0, 0}
after = {10, 10, 10, 10}


Breakpoint 2, main () at overflow.c:37
37              a[i] = i * 10;
(gdb) n
38              printf("i = %d\n", i);
(gdb) 
i = 0
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
(gdb) 
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) 
a = {0, 0, 0, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
(gdb) 
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) 

Breakpoint 2, main () at overflow.c:37
37              a[i] = i * 10;
(gdb) 
38              printf("i = %d\n", i);
(gdb) 
i = 1
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
(gdb) 
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) 
a = {0, 10, 0, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
(gdb) 
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) 

Breakpoint 2, main () at overflow.c:37
37              a[i] = i * 10;
(gdb) 
38              printf("i = %d\n", i);
(gdb) 
i = 2
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
(gdb) 
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) 
a = {0, 10, 20, 0}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
(gdb) 
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) 

Breakpoint 2, main () at overflow.c:37
37              a[i] = i * 10;
(gdb) 
38              printf("i = %d\n", i);
(gdb) 
i = 3
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
(gdb) 
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) 
a = {0, 10, 20, 30}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
(gdb) 
after = {10, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) 

Breakpoint 2, main () at overflow.c:37
37              a[i] = i * 10;
(gdb) 
38              printf("i = %d\n", i);
(gdb) 
i = 4
39              printf("before = {%d, %d, %d, %d}\n", before[0], before[1], before[2], before[3]);
(gdb) 
before = {10, 10, 10, 10}
40              printf("a = {%d, %d, %d, %d}\n", a[0], a[1], a[2], a[3]);
(gdb) 
a = {0, 10, 20, 30}
41              printf("after = {%d, %d, %d, %d}\n", after[0], after[1], after[2], after[3]);
(gdb) 
after = {40, 10, 10, 10}
36          for (i = 0; i < OVERFLOW; i++) {
(gdb) print &(after[0])
$1 = (int *) 0x7fffffffe9b0
(gdb) print &(a[4])
$2 = (int *) 0x7fffffffe9b0
(gdb) quit
A debugging session is active.

        Inferior 1 [process 45739] will be killed.

Quit anyway? (y or n) y
]0;foojoel@wolf:/h/u6/c9/01/foojoel/foojoel/lab6wolf:~/foojoel/lab6$ exit
exit

Script done on 2019-10-18 17:03:04-0400
